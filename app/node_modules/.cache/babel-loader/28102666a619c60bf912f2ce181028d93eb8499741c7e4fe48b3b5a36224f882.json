{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst USER_API_BASE_URL = 'http://localhost:8081/customers';\nclass ApiCustomerService {\n  //user == customer\n\n  //Create Account\n  //return Successfully msg\n  addUser(user) {\n    return axios.post(USER_API_BASE_URL + '/signup/', user);\n  }\n  addSupplier(categoryName, user) {\n    return axios.put(USER_API_BASE_URL + '/signup/' + categoryName, user);\n  }\n\n  //Edit Profile\n  //return user object\n  editUser(user) {\n    return axios.put(USER_API_BASE_URL + '/edit-profile/' + user.id, user);\n  }\n\n  //Change password\n  //retrun successfully msg\n  editUserPassword(user_id, pwd) {\n    return axios.put(USER_API_BASE_URL + '/change_pwd/' + user_id + '/' + pwd);\n  }\n\n  //Authenticate user\n  //return user object\n  fetchUserByLoginrequest(loginRequest) {\n    return axios.post(USER_API_BASE_URL + '/login', loginRequest);\n  }\n\n  //get address\n  //retrun address object\n  getUserAddress(user_id) {\n    return axios.get(USER_API_BASE_URL + '/address/' + user_id);\n  }\n\n  //Change address\n  //retrun successfully msg\n  editUserAddress(userId, address) {\n    return axios.put(USER_API_BASE_URL + '/address/' + userId, address);\n  }\n\n  //get all product by search from DB\n  //return list of product which match with searchName\n  fetchProductsById(productId) {\n    return axios.get(USER_API_BASE_URL + '/product/' + productId);\n  }\n\n  //get all product by search from DB\n  //return list of product which match with searchName\n  fetchProductsByName(searchName) {\n    return axios.get(USER_API_BASE_URL + '/product/search/' + searchName);\n  }\n\n  //get all product by category_id randomly from DB\n  //return list of products\n  fetchProductsByCategoryId(categoryId) {\n    return axios.get(USER_API_BASE_URL + '/product/list/' + categoryId);\n  }\n\n  //get all sorted product by category_id from Low to High from DB\n  //return list of products\n  sortProductsByLowToHigh(categoryId) {\n    return axios.get(USER_API_BASE_URL + '/product/lowtohigh/' + categoryId);\n  }\n\n  //get all sorted product by category_id from High to Loq from DB\n  //return list of products\n  sortProductsByHighToLow(categoryId) {\n    return axios.get(USER_API_BASE_URL + '/product/hightolow/' + categoryId);\n  }\n  addProductToCart(cart) {\n    return axios.post(USER_API_BASE_URL + '/cart', cart);\n  }\n  getCartByUserId(userId) {\n    return axios.get(USER_API_BASE_URL + '/cart/' + userId);\n  }\n  deleteCartByUserId(cartId) {\n    return axios.delete(USER_API_BASE_URL + '/cart/' + cartId);\n  }\n  getTAmtUserId(userId) {\n    return axios.get(USER_API_BASE_URL + '/cart/tamt/' + userId);\n  }\n  getSAmtByUserId(userId) {\n    return axios.get(USER_API_BASE_URL + '/cart/samt/' + userId);\n  }\n\n  //on payment\n  //orders : customer_id/user_id, product_name, delivery_boy_id/user_id, order_delivery_status = pending, total_price, order_date, delivery_date = null\n  //return the orders id which required in order_details\n  addorders(totalPrice, userId) {\n    return axios.get(USER_API_BASE_URL + '/orders/' + userId + '/' + totalPrice);\n  }\n\n  //get all order_history from DB by user_id\n  //return list of orders which match with user_id\n  fetchOrdersList(user_id) {\n    return axios.get(USER_API_BASE_URL + '/orders/' + user_id);\n  }\n  fetchOrdersdetails(orderId) {\n    return axios.get(USER_API_BASE_URL + '/orderdetailslist/' + orderId);\n  }\n\n  //on payment\n  //order_details : customer_id/user_id, product_name, final_price, qty, grams, order_id\n  //Array of order_details\n  addDetails(userId, OrderId) {\n    return axios.get(USER_API_BASE_URL + '/orderdetails/' + userId + '/' + OrderId);\n  }\n\n  //on payment\n  //payment : payment_type, payment_date = now() = auto on SERVER side, payment status = paid, customer_id/user_id, order_id\n  //Array of order_details\n  addpaymentDetails(payment) {\n    return axios.post(USER_API_BASE_URL + '/payment', payment);\n  }\n  updateCartUserId(userId) {\n    return axios.get(USER_API_BASE_URL + '/cartupdate/' + userId);\n  }\n  fetchOrdersListDeliveryBoy(delivery_boy_id) {\n    return axios.get(USER_API_BASE_URL + '/ordersfoedb/' + delivery_boy_id);\n  }\n  deliveredOrder(orderId) {\n    return axios.get(USER_API_BASE_URL + '/deliveredorder/' + orderId);\n  }\n  fetchOrdersListAdmin() {\n    return axios.get(USER_API_BASE_URL + '/orderslist/');\n  }\n  fetchSupplierList() {\n    return axios.get(USER_API_BASE_URL + '/supplierlist/');\n  }\n  fetchDeliveryBoyList() {\n    return axios.get(USER_API_BASE_URL + '/deliveryboylist/');\n  }\n  getCustomerAddressDetails(orderId) {\n    return axios.get(USER_API_BASE_URL + '/addressdetails/' + orderId);\n  }\n  fetchAllCategory() {\n    return axios.get(USER_API_BASE_URL + '/categorylist/');\n  }\n  fetchProductsForHomePage() {\n    return axios.get(USER_API_BASE_URL + '/homeproductlist/');\n  }\n  addOrderAddress(address) {\n    return axios.post(USER_API_BASE_URL + '/orderaddress/', address);\n  }\n  getOrderAddress(orderId) {\n    return axios.get(USER_API_BASE_URL + '/orderaddress/' + orderId);\n  }\n  addOrderIdtoOrderAddress(addressId, orderId) {\n    return axios.get(USER_API_BASE_URL + '/orderaddress1/' + addressId + '/' + orderId);\n  }\n  getUserDetails(customerId) {\n    return axios.get(USER_API_BASE_URL + '/getuser/' + customerId);\n  }\n}\nexport default new ApiCustomerService();","map":{"version":3,"names":["React","useEffect","useState","axios","USER_API_BASE_URL","ApiCustomerService","addUser","user","post","addSupplier","categoryName","put","editUser","id","editUserPassword","user_id","pwd","fetchUserByLoginrequest","loginRequest","getUserAddress","get","editUserAddress","userId","address","fetchProductsById","productId","fetchProductsByName","searchName","fetchProductsByCategoryId","categoryId","sortProductsByLowToHigh","sortProductsByHighToLow","addProductToCart","cart","getCartByUserId","deleteCartByUserId","cartId","delete","getTAmtUserId","getSAmtByUserId","addorders","totalPrice","fetchOrdersList","fetchOrdersdetails","orderId","addDetails","OrderId","addpaymentDetails","payment","updateCartUserId","fetchOrdersListDeliveryBoy","delivery_boy_id","deliveredOrder","fetchOrdersListAdmin","fetchSupplierList","fetchDeliveryBoyList","getCustomerAddressDetails","fetchAllCategory","fetchProductsForHomePage","addOrderAddress","getOrderAddress","addOrderIdtoOrderAddress","addressId","getUserDetails","customerId"],"sources":["C:/Users/SHIFA/Desktop/Grocerista_DAC Project/Grocerista_FinalProject/app/src/services/customer/ApiCustomerService.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst USER_API_BASE_URL = 'http://localhost:8081/customers';\r\n\r\nclass ApiCustomerService {\r\n    //user == customer\r\n\r\n    //Create Account\r\n    //return Successfully msg\r\n    addUser(user) {\r\n        return axios.post(USER_API_BASE_URL + '/signup/', user);\r\n    }\r\n\r\n    addSupplier(categoryName, user) {\r\n        return axios.put(USER_API_BASE_URL + '/signup/'+categoryName, user);\r\n    }\r\n\r\n    //Edit Profile\r\n    //return user object\r\n    editUser(user) {\r\n        return axios.put(USER_API_BASE_URL + '/edit-profile/' + user.id, user);\r\n    }\r\n\r\n    //Change password\r\n    //retrun successfully msg\r\n    editUserPassword(user_id, pwd) {\r\n        return axios.put(USER_API_BASE_URL + '/change_pwd/' + user_id + '/'+pwd);\r\n    }\r\n\r\n    //Authenticate user\r\n    //return user object\r\n    fetchUserByLoginrequest(loginRequest) {\r\n        return axios.post(USER_API_BASE_URL + '/login', loginRequest);\r\n    }\r\n\r\n    //get address\r\n    //retrun address object\r\n    getUserAddress(user_id) {\r\n        return axios.get(USER_API_BASE_URL + '/address/' + user_id);\r\n    }\r\n\r\n    //Change address\r\n    //retrun successfully msg\r\n    editUserAddress(userId, address) {\r\n        return axios.put(USER_API_BASE_URL + '/address/' + userId, address);\r\n    }\r\n\r\n    //get all product by search from DB\r\n    //return list of product which match with searchName\r\n    fetchProductsById(productId) {\r\n        return axios.get(USER_API_BASE_URL + '/product/' + productId);\r\n    }\r\n\r\n    //get all product by search from DB\r\n    //return list of product which match with searchName\r\n    fetchProductsByName(searchName) {\r\n        return axios.get(USER_API_BASE_URL + '/product/search/' + searchName);\r\n    }\r\n\r\n\r\n    //get all product by category_id randomly from DB\r\n    //return list of products\r\n    fetchProductsByCategoryId(categoryId) {\r\n        return axios.get(USER_API_BASE_URL + '/product/list/' + categoryId);\r\n    }\r\n    \r\n    //get all sorted product by category_id from Low to High from DB\r\n    //return list of products\r\n    sortProductsByLowToHigh(categoryId) {\r\n        return axios.get(USER_API_BASE_URL + '/product/lowtohigh/' + categoryId);\r\n    }\r\n\r\n    //get all sorted product by category_id from High to Loq from DB\r\n    //return list of products\r\n    sortProductsByHighToLow(categoryId) {\r\n        return axios.get(USER_API_BASE_URL + '/product/hightolow/' + categoryId);\r\n    }\r\n\r\n    addProductToCart(cart){ \r\n        return axios.post(USER_API_BASE_URL + '/cart', cart);\r\n    }\r\n\r\n    getCartByUserId(userId){\r\n        return axios.get(USER_API_BASE_URL + '/cart/'+ userId);\r\n    }\r\n\r\n    deleteCartByUserId(cartId){\r\n        return axios.delete(USER_API_BASE_URL + '/cart/'+ cartId);\r\n    }\r\n\r\n    getTAmtUserId(userId){\r\n        return axios.get(USER_API_BASE_URL + '/cart/tamt/'+ userId);\r\n    }\r\n\r\n    getSAmtByUserId(userId){\r\n        return axios.get(USER_API_BASE_URL + '/cart/samt/'+ userId);\r\n    }\r\n\r\n    //on payment\r\n    //orders : customer_id/user_id, product_name, delivery_boy_id/user_id, order_delivery_status = pending, total_price, order_date, delivery_date = null\r\n    //return the orders id which required in order_details\r\n    addorders(totalPrice, userId) {\r\n        return axios.get(USER_API_BASE_URL+'/orders/'+userId+'/'+totalPrice);\r\n    }\r\n    \r\n    //get all order_history from DB by user_id\r\n    //return list of orders which match with user_id\r\n    fetchOrdersList(user_id) {\r\n        return axios.get(USER_API_BASE_URL + '/orders/' + user_id);\r\n    }\r\n\r\n    fetchOrdersdetails(orderId) {\r\n        return axios.get(USER_API_BASE_URL + '/orderdetailslist/' + orderId);\r\n    }\r\n\r\n    //on payment\r\n    //order_details : customer_id/user_id, product_name, final_price, qty, grams, order_id\r\n    //Array of order_details\r\n    addDetails(userId, OrderId) {\r\n        return axios.get( USER_API_BASE_URL + '/orderdetails/'+ userId + '/'+ OrderId);\r\n    }\r\n\r\n    //on payment\r\n    //payment : payment_type, payment_date = now() = auto on SERVER side, payment status = paid, customer_id/user_id, order_id\r\n    //Array of order_details\r\n    addpaymentDetails(payment) {\r\n        return axios.post(USER_API_BASE_URL+'/payment', payment);\r\n    }  \r\n\r\n    updateCartUserId(userId){\r\n        return axios.get( USER_API_BASE_URL + '/cartupdate/'+ userId);\r\n    }\r\n\r\n    fetchOrdersListDeliveryBoy(delivery_boy_id) {\r\n        return axios.get(USER_API_BASE_URL + '/ordersfoedb/' + delivery_boy_id);\r\n    }\r\n\r\n    deliveredOrder(orderId){\r\n        return axios.get(USER_API_BASE_URL + '/deliveredorder/' + orderId);\r\n    }\r\n\r\n    fetchOrdersListAdmin() {\r\n        return axios.get(USER_API_BASE_URL + '/orderslist/');\r\n    }\r\n\r\n    fetchSupplierList(){\r\n        return axios.get(USER_API_BASE_URL + '/supplierlist/');\r\n    }\r\n    \r\n    fetchDeliveryBoyList(){\r\n        return axios.get(USER_API_BASE_URL + '/deliveryboylist/');\r\n    }\r\n\r\n    getCustomerAddressDetails(orderId){\r\n        return axios.get(USER_API_BASE_URL + '/addressdetails/'+orderId);\r\n    }\r\n\r\n    fetchAllCategory(){\r\n        return axios.get(USER_API_BASE_URL + '/categorylist/');\r\n    }\r\n\r\n    fetchProductsForHomePage(){\r\n        return axios.get(USER_API_BASE_URL + '/homeproductlist/');\r\n    }\r\n\r\n    addOrderAddress(address){\r\n        return axios.post(USER_API_BASE_URL+'/orderaddress/', address);\r\n    }\r\n\r\n    getOrderAddress(orderId) {\r\n        return axios.get(USER_API_BASE_URL + '/orderaddress/' + orderId);\r\n    }\r\n\r\n    addOrderIdtoOrderAddress(addressId, orderId){\r\n        return axios.get(USER_API_BASE_URL + '/orderaddress1/' + addressId+'/'+orderId);\r\n    }\r\n\r\n    getUserDetails(customerId){\r\n        return axios.get(USER_API_BASE_URL + '/getuser/' + customerId);\r\n    }\r\n}\r\n\r\nexport default new ApiCustomerService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}